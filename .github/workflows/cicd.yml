name: cicd
on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - master
  workflow_dispatch:
    inputs:
      deploy:
        description: "Deploy the application"
        default: "false"
  

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"
      - run: pip install -r requirements-dev.lock
      - run: ruff check .

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"
      - run: pip install -r requirements-dev.lock
      - run: pytest
        env:
          PYTEST_ADDOPTS: "--color=yes"

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Get version from pyproject.toml
        id: get_version
        run: |
          VERSION=$(grep '^version =' pyproject.toml | head -1 | cut -d '"' -f2)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      - name: Build docker image
        uses: docker/build-push-action@v6
        with:
          file: docker/Dockerfile
          tags: auckebos/bunq-ynab-connect:latest,auckebos/bunq-ynab-connect:${{ steps.get_version.outputs.version }}
          platforms: linux/amd64,linux/arm64
          # platforms: linux/arm64
          push: false
          outputs: type=oci,dest=${{ runner.temp }}/bunq-ynab-connect.tar
      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v4
        with:
          name: bunq-ynab-connect-image
          path: ${{ runner.temp }}/bunq-ynab-connect.tar

  deploy:
    if: success() && (github.ref == 'refs/heads/master' || (github.event_name == 'workflow_dispatch' && github.event.inputs.deploy == 'true'))
    runs-on: ubuntu-latest
    needs: [build, test, lint]
    steps:
      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: bunq-ynab-connect-image
      - name: Load Docker image
        run: |
          sudo ctr -n moby images import bunq-ynab-connect.tar          
      - name: Get version from pyproject.toml
        id: get_version
        run: |
          VERSION=$(grep '^version =' pyproject.toml | head -1 | cut -d '"' -f2)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push Docker image
        run: |
          docker push auckebos/bunq-ynab-connect --all-tags

